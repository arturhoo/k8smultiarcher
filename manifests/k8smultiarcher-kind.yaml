apiVersion: v1
kind: Namespace
metadata:
  name: k8smultiarcher
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: k8smultiarcher
  namespace: k8smultiarcher
  labels:
    app.kubernetes.io/instance: k8smultiarcher
spec:
  secretName: k8smultiarcher-cert
  dnsNames:
    - k8smultiarcher.k8smultiarcher.svc
  issuerRef:
    name: selfsigned
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned
  namespace: k8smultiarcher
  labels:
    app.kubernetes.io/instance: k8smultiarcher
spec:
  selfSigned: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8smultiarcher
  namespace: k8smultiarcher
  labels:
    app.kubernetes.io/instance: k8smultiarcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: k8smultiarcher
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: k8smultiarcher
    spec:
      containers:
        - name: k8smultiarcher
          image: kind.local/k8smultiarcher:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: TLS_ENABLED
              value: "true"
            - name: CERT_PATH
              value: /etc/certs/tls.crt
            - name: KEY_PATH
              value: /etc/certs/tls.key
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: k8smultiarcher-cert
              mountPath: /etc/certs
              readOnly: true
      volumes:
        - name: k8smultiarcher-cert
          secret:
            secretName: k8smultiarcher-cert
---
apiVersion: v1
kind: Service
metadata:
  name: k8smultiarcher
  namespace: k8smultiarcher
  labels:
    app.kubernetes.io/instance: k8smultiarcher
spec:
  selector:
    app.kubernetes.io/instance: k8smultiarcher
  ports:
    - name: https
      port: 443
      targetPort: 8443
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: k8smultiarcher-webhook
  annotations:
    cert-manager.io/inject-ca-from: k8smultiarcher/k8smultiarcher
webhooks:
  - name: k8smultiarcher.k8smultiarcher.svc
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: k8smultiarcher
        namespace: k8smultiarcher
        path: "/mutate"
    rules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
    failurePolicy: Ignore
    sideEffects: None
